####### Modified by Changchun Zhou   ########

##########################################################################
#                           Global Settings                              #
##########################################################################
source -verbose ./config_temp.tcl

set DESIGN      $DESIGN_NAME

set_attribute hdl_search_path       "./"
set_attribute script_search_path    ./script
set_attribute information_level     9
set_attribute hdl_error_on_blackbox true
set_attribute hdl_max_loop_limit    8192
set_attribute hdl_track_filename_row_col true /

set_attribute max_cpus_per_server 32
set_attribute super_thread_servers [string repeat "localhost " 64]
##########################################################################
#                     Libraries and technology files                     #
##########################################################################
read_power_intent -cpf -module $DESIGN ./${DESIGN}.cpf
# source ./script/tech_settings.tcl
# set_attribute library $slow_LV_lib

source $LEF
set_attribute lef_library  ${tech_lef}

##########################################################################
#                          Enable clock gating                           #
##########################################################################
set_attribute lp_insert_clock_gating true /
set_attribute lp_clock_gating_exceptions_aware true /
set_attribute lp_clock_gating_prefix "PREFIX_lp_clock_gating"  /

##########################################################################
#                      Enable operand isolation                          #
##########################################################################
set_attribute lp_insert_operand_isolation true /
set_attribute lp_operand_isolation_prefix "PREFIX_lp_operand_isolation"  


##########################################################################
#                            Read HDL files                              #
##########################################################################
include $HDL
foreach VERILOG_FILE ${VERILOG_FILES} {
  read_hdl -sv ${VERILOG_FILE}
}

##########################################################################
#                               Read Netlist                             #
##########################################################################


##########################################################################
#                          Don't touch cells                             #
##########################################################################
source $DONTUSE

##########################################################################
#                     Setup for power analysis                           #
##########################################################################


##########################################################################
#                    Setup for timing optimization                       #
##########################################################################
set_attribute tns_opto true


##########################################################################
#                            Elaborate design                            #
##########################################################################
set_attribute hdl_vhdl_assign_width_mismatch true
set_attribute hdl_vhdl_lrm_compliance true
set_attribute interconnect_mode ple
set_attribute remove_assigns true

set_attribute hdl_undriven_signal_value 0
set_attribute hdl_undriven_output_port_value 0
set_attribute hdl_unconnected_input_port_value 0
set_attribute auto_ungroup $UNGROUP

elaborate $DESIGN

apply_power_intent -summary

commit_power_intent

##########################################################################
#                              load sdc                                  #
##########################################################################
# read_sdc ${SDC_FILE}
# write_sdc > ${SYNTH_PROJDIR}/write_sdc.sdc

check_design -unresolved
##########################################################################
#                          Setting constraints                           #
##########################################################################


##########################################################################
#                         Clock gating constraint                        #
##########################################################################
set_attribute lp_clock_gating_max_flops 16 /designs/*

##########################################################################
#                         Power optimization                             #
##########################################################################
# 1
set_attribute max_leakage_power $MAXLEAKAGE $DESIGN

# 2. leakage power 
set_attribute lp_multi_vt_optimization_effort medium /

# 3
set_attribute max_dynamic_power $MAXDYNAMIC $DESIGN

# 4
# set_attribute lp_optimize_dynamic_power_first true $DESIGN
set_attribute lp_power_optimization_weight $OPTWGT $DESIGN

# 5
set_attribute lp_power_analysis_effort medium /


##########################################################################
#                            check design                                #
##########################################################################
check_design -all               > ${SYNTH_PROJDIR}/rpt/${DESIGN}.design_check_pre_synth.rpt
check_library                   > ${SYNTH_PROJDIR}/rpt/checkLibrary.rpt
report timing -verbose -lint    > ${SYNTH_PROJDIR}/rpt/${DESIGN}.timing_check_pre_synth.rpt

##########################################################################
#                             Synthesis                                  #
##########################################################################
syn_generic -effort medium
syn_map -effort medium
syn_opt
# syn_opt -incremental


##########################################################################
#                        Write files for Encounter                       #
##########################################################################
write_encounter design -basename ${SYNTH_PROJDIR}/p+r_enc/${DESIGN}_synth
write_sdf -edge check_edge -setuphold split > ${SYNTH_PROJDIR}/gate/${DESIGN}.sdf
write -m ${DESIGN} > ${SYNTH_PROJDIR}/gate/${DESIGN}.v

##########################################################################
#                    Report and analyze power and timing                 # 
##########################################################################

##########################################################################
#                              Cost groups                               #
##########################################################################
foreach clock_name $clock_list {
	define_cost_group -name ${clock_name}_in2reg -design $DESIGN
	path_group -from [all_inputs] -to $clock_name -group ${clock_name}_in2reg
	report timing -encounter -full_pin_names -num_paths 100 -cost_group ${clock_name}_in2reg > ${SYNTH_PROJDIR}/rpt/path_group/${clock_name}_in2reg.rpt
}

#register to output
foreach clock_name $clock_list {
	define_cost_group -name ${clock_name}_reg2out -design $DESIGN
	path_group -from $clock_name -to [all_outputs] -group ${clock_name}_reg2out
	report timing -encounter -full_pin_names -num_paths 100 -cost_group ${clock_name}_reg2out > ${SYNTH_PROJDIR}/rpt/path_group/${clock_name}_reg2out.rpt
}

#register to register
foreach clock_name $clock_list {
	define_cost_group -name ${clock_name}_reg2reg -design $DESIGN
	path_group -from $clock_name -to $clock_name -group ${clock_name}_reg2reg
	report timing -encounter -full_pin_names -num_paths 100 -cost_group ${clock_name}_reg2reg > ${SYNTH_PROJDIR}/rpt/path_group/${clock_name}_reg2reg.rpt
}

##########################################################################
#                              Write Reports                             #
##########################################################################
report summary          > ${SYNTH_PROJDIR}/rpt/${DESIGN}.summary.rpt
report gates            > ${SYNTH_PROJDIR}/rpt/${DESIGN}.gates.rpt
report design_rules     > ${SYNTH_PROJDIR}/rpt/${DESIGN}.rules.rpt
report clock_gating     > ${SYNTH_PROJDIR}/rpt/${DESIGN}.clkgating.rpt
report timing -num_paths 100     > ${SYNTH_PROJDIR}/rpt/${DESIGN}.timing_100.rpt
report timing -num_paths 1000     > ${SYNTH_PROJDIR}/rpt/${DESIGN}.timing_1000.rpt
report power            > ${SYNTH_PROJDIR}/rpt/power/${DESIGN}.power.rpt
report power -depth 1   > ${SYNTH_PROJDIR}/rpt/power/${DESIGN}.power_depth1.rpt
report power -depth 2   > ${SYNTH_PROJDIR}/rpt/power/${DESIGN}.power_depth2.rpt
report power -depth 3   > ${SYNTH_PROJDIR}/rpt/power/${DESIGN}.power_depth3.rpt
report power -depth 4   > ${SYNTH_PROJDIR}/rpt/power/${DESIGN}.power_depth4.rpt
report power -depth 5   > ${SYNTH_PROJDIR}/rpt/power/${DESIGN}.power_depth5.rpt
report power -depth 6   > ${SYNTH_PROJDIR}/rpt/power/${DESIGN}.power_depth6.rpt
report area             > ${SYNTH_PROJDIR}/rpt/area/${DESIGN}.area.rpt
report area -depth 1    > ${SYNTH_PROJDIR}/rpt/area/${DESIGN}.area_depth1.rpt
report area -depth 2    > ${SYNTH_PROJDIR}/rpt/area/${DESIGN}.area_depth2.rpt
report area -depth 3    > ${SYNTH_PROJDIR}/rpt/area/${DESIGN}.area_depth3.rpt
report area -depth 4    > ${SYNTH_PROJDIR}/rpt/area/${DESIGN}.area_depth4.rpt
report area -depth 5    > ${SYNTH_PROJDIR}/rpt/area/${DESIGN}.area_depth5.rpt
report area -depth 6    > ${SYNTH_PROJDIR}/rpt/area/${DESIGN}.area_depth6.rpt
report area -depth 7    > ${SYNTH_PROJDIR}/rpt/area/${DESIGN}.area_depth7.rpt

#### check design after synth
check_design -all > ${SYNTH_PROJDIR}/rpt/${DESIGN}.design_post_synth.rpt
report timing -verbose -lint > ${SYNTH_PROJDIR}/rpt/${DESIGN}.timing_check_post_synth.rpt


puts "The RUNTIME is [get_attr runtime /] seconds"
