//*******************************************************************************
//*        Software         : TSMC MEMORY COMPILER 2006.09.01.d.140a
//*        Technology       : 65 nm CMOS LOGIC Low Power LowK Cu 1P9M 1.2V
//*                           Mix-vt logic, Standard-vt SRAM
//*        Memory Type      : TSMC 65nm Low Power Single Port Register File
//*        Library Name     : ts1n65lpa256x8m4 (user specify : TS1N65LPA256X8M4)
//*        Library Version  : 140a
//*        Generated Time   : 2024/04/08, 13:51:00
//*******************************************************************************
//*******************************************************************************
//*
//*STATEMENT OF USE
//*
//*This information contains confidential and proprietary information of TSMC.
//*No part of this information may be reproduced, transmitted, transcribed,
//*stored in a retrieval system, or translated into any human or computer
//*language, in any form or by any means, electronic, mechanical, magnetic,
//*optical, chemical, manual, or otherwise, without the prior written permission
//*of TSMC. This information was prepared for informational purpose and is for
//*use by TSMC's customers only. TSMC reserves the right to make changes in the
//*information at any time and without notice.
//*
//*******************************************************************************


MemoryTemplate (TS1N65LPA256X8M4) {

      CellName        : TS1N65LPA256X8M4;
      Algorithm       : SMarchCHKBvcd;
      logicalPorts    : 1rw;
      NumberOfWords   : 256;
      MinHold         : 0.5;
      MilliWattsPerMegaHertz : 0.007;
      

      Port (CLK)  {
          Function: Clock;
      }
      Port (CEB)  {
                    Function: Select;
		    Polarity: ActiveLow;	

      }

      Port (WEB) {
          Function: WriteEnable; 
	  Polarity: ActiveLow;

      }

      Port (BWEB[7:0]) {
          Function: WriteEnable;
          Polarity: ActiveLow;
      }

      Port (D[7:0]) {
          Function: Data;
          Direction:   Input;
      }

      Port (Q[7:0]) {
          Function: Data;
          Direction:   Output;
      }

      port (A[7:0]) {
          function:    address;
      }

Port (TSEL[0]) {
            Direction: Input    ;
            Function:  select    ;
            Polarity:  ActiveHigh  ;
      }

Port (TSEL[1]) {
            Direction: Input    ;
            Function:  select    ;
            Polarity:  ActiveLow  ;
      }



// number of rows by number of columns.
      AddressCounter {
          Function ( ColumnAddress ) {
              LogicalAddressMap {
                  ColumnAddress[1:0]:Address[1:0];  // number of columns
              }
          }
          Function ( ColumnAddress ) {
	  CountRange[0:3];
          }

          Function  ( RowAddress ) {
              LogicalAddressMap {
                  RowAddress[5:0]:Address[7:2];  // number of rows
              }
          }
          Function  ( RowAddress ) {
	  CountRange[0:63];
		              }
      }

      OperationSet : syncWR;
      bitGrouping : 1;
}

